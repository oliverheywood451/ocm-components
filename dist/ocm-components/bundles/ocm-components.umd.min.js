!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/elements"),require("lodash"),require("@fortawesome/free-solid-svg-icons"),require("@fortawesome/free-regular-svg-icons"),require("@angular/forms"),require("rxjs/operators"),require("rxjs"),require("ngx-image-zoom"),require("@fortawesome/angular-fontawesome"),require("@angular/common")):"function"==typeof define&&define.amd?define("ocm-components",["exports","@angular/core","@angular/elements","lodash","@fortawesome/free-solid-svg-icons","@fortawesome/free-regular-svg-icons","@angular/forms","rxjs/operators","rxjs","ngx-image-zoom","@fortawesome/angular-fontawesome","@angular/common"],e):e((t=t||self)["ocm-components"]={},t.ng.core,t.ng.elements,t.lodash,t.freeSolidSvgIcons,t.freeRegularSvgIcons,t.ng.forms,t.rxjs.operators,t.rxjs,t.ngxImageZoom,t.angularFontawesome,t.ng.common)}(this,function(t,e,n,r,i,s,o,a,l,c,d,u){"use strict";var p=function(){function t(){this.product={PriceSchedule:{},xp:{Images:[]}},this.quantityLimits={inventory:0,maxPerOrder:0,minPerOrder:0,restrictedQuantities:[]},this.addedToCart=new e.EventEmitter,this.setIsFavorite=new e.EventEmitter,this.routeToProductDetails=new e.EventEmitter}return t.prototype.ngOnChanges=function(){this.isSetFavoriteUsed=this.setIsFavorite.observers.length>0;var t=this.addedToCart.observers.length>0;this.isViewOnlyProduct=!this.product.PriceSchedule,this.hasSpecs=this.product.SpecCount>0,this.shouldDisplayAddToCart=t&&!this.isViewOnlyProduct&&!this.hasSpecs},t.prototype.ngOnInit=function(){},t.prototype.addToCart=function(t){this.addedToCart.emit(t)},t.prototype.getImageUrl=function(){var t=this.product.xp.Images||[],e=r.map(t,function(t){return t.Url.replace("{url}","https://s3.dualstack.us-east-1.amazonaws.com/staticcintas.eretailing.com/images/product")}),n=r.without(e,void 0);return n.length>0?n[0]:"http://placehold.it/300x300"},t.prototype.toDetails=function(){this.routeToProductDetails.emit(this.product.ID)},t.decorators=[{type:e.Component,args:[{template:'<div class="card mb-5 w-100 border-hover">\r\n  <div class="ribbon ribbon-top-right bg-light">\r\n    <ocm-toggle-favorite\r\n      *ngIf="isSetFavoriteUsed"\r\n      title="Favorite"\r\n      (click)="$event.stopPropagation()"\r\n      [favorite]="isFavorite"\r\n      (favoriteChanged)="setIsFavorite.emit($event)"\r\n    ></ocm-toggle-favorite>\r\n  </div>\r\n  <img class="card-img-top img-fluid flex-shrink-0" (click)="toDetails()" [src]="getImageUrl()" alt="{{ product.ID }}" />\r\n  <div class="card-body d-flex flex-column justify-content-between bg-light">\r\n    <h5 class="card-title" title="{{ product.Name }}">{{ product.Name }}</h5>\r\n    <p class="card-text text-muted" [innerHtml]="product.ID">\r\n      {{ product.ID }}\r\n    </p>\r\n    <div class="d-flex flex-wrap justify-content-between align-items-center">\r\n      <p class="card-text mb-0" *ngIf="product.PriceSchedule?.PriceBreaks">\r\n        {{ (product?.PriceSchedule?.PriceBreaks)[0]?.Price || 0 | currency }}\r\n      </p>\r\n      <label for="quantity" class="sr-only">Quantity</label>\r\n      <ocm-quantity-input\r\n        class="w-50"\r\n        id="quantity"\r\n        [limits]="quantityLimits"\r\n        [existingQty]="null"\r\n        (qtyChange)="quantity = $event.detail"\r\n      >\r\n      </ocm-quantity-input>\r\n    </div>\r\n  </div>\r\n  <div class="card-footer">\r\n    <button\r\n      *ngIf="shouldDisplayAddToCart"\r\n      (click)="$event.stopPropagation()"\r\n      class="btn btn-primary btn-block small"\r\n      type="submit"\r\n      (click)="addToCart($event)"\r\n    >\r\n      Add <span class="d-md-none d-lg-inline"> to Cart</span>\r\n    </button>\r\n    <button *ngIf="shouldDisplayAddToCart" (click)="$event.stopPropagation()" class="btn btn-primary btn-block small" type="submit">\r\n      Add <span class="d-md-none d-lg-inline"> to Cart</span>\r\n    </button>\r\n    <button *ngIf="isViewOnlyProduct" (click)="toDetails()" class="btn btn-default btn-block btn-outline-dark">\r\n      View\r\n      <span class="d-sm-none d-lg-inline">Product</span>\r\n    </button>\r\n    <button *ngIf="hasSpecs" (click)="toDetails()" class="btn btn-primary btn-block small">\r\n      Select\r\n      <span class="d-sm-none d-lg-inline">Specs</span>\r\n    </button>\r\n  </div>\r\n</div>\r\n',encapsulation:e.ViewEncapsulation.None,styles:[""]}]}],t.propDecorators={product:[{type:e.Input}],isFavorite:[{type:e.Input}],quantityLimits:[{type:e.Input}],addedToCart:[{type:e.Output}],setIsFavorite:[{type:e.Output}],routeToProductDetails:[{type:e.Output}]},t}();var m=function(){function t(){this.faHeartFilled=i.faHeart,this.faHeartOutline=s.faHeart,this.favoriteChanged=new e.EventEmitter}return t.decorators=[{type:e.Component,args:[{template:'<fa-icon [ngClass]="{ \'text-danger\': favorite }"\r\n         [icon]="favorite ? faHeartFilled : faHeartOutline"\r\n         (click)="favoriteChanged.emit(!favorite)"\r\n         style="cursor: pointer;"></fa-icon>',styles:[""]}]}],t.propDecorators={favorite:[{type:e.Input}],favoriteChanged:[{type:e.Output}]},t}();var g=function(){function t(){this.qtyChange=new e.EventEmitter,this.isDefaultSet=!1,this.isQtyRestricted=!1}return t.prototype.ngOnInit=function(){this.form=new o.FormGroup({quantity:new o.FormControl(1,[o.Validators.required])})},t.prototype.ngOnChanges=function(){this.limits&&(this.isQtyRestricted=0!==this.limits.restrictedQuantities.length,this.isDefaultSet||this.setDefault(),this.quantityChangeListener(),this.existingQty||this.qtyChange.emit(this.form.get("quantity").value))},t.prototype.setDefault=function(){this.isDefaultSet=!0,this.form.setValue({quantity:this.getDefaultQty()})},t.prototype.quantityChangeListener=function(){var t=this;this.form.valueChanges.pipe(a.debounceTime(500)).subscribe(function(){t.form.valid&&!isNaN(t.form.value.quantity)&&t.qtyChange.emit(t.form.value.quantity)})},t.prototype.getDefaultQty=function(){return this.existingQty?this.existingQty:this.limits.restrictedQuantities.length?this.limits.restrictedQuantities[0]:this.limits.minPerOrder},t.decorators=[{type:e.Component,args:[{template:'<form [formGroup]="form">\r\n  <div class="form-group mb-0">\r\n    <label for="quantity" class="sr-only">Product Quantity</label>\r\n    <input\r\n      *ngIf="!isQtyRestricted"\r\n      id="quantity"\r\n      type="number"\r\n      formControlName="quantity"\r\n      class="form-control text-center"\r\n      placeholder="0"\r\n      style="min-width:65px"\r\n      aria-label="Quantity Input Selector"\r\n      min="1"\r\n      aria-describedby="quantity"\r\n    />\r\n    <select\r\n      *ngIf="isQtyRestricted"\r\n      class="form-control text-center"\r\n      style="min-width:65px"\r\n      formControlName="quantity"\r\n      id="quantity"\r\n    >\r\n      <option *ngFor="let qty of limits.restrictedQuantities" [value]="qty">\r\n        {{ qty }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</form>\r\n<small\r\n  *ngIf="form.controls[\'quantity\'].getError(\'required\')"\r\n  class="alert alert-danger error-message c-error-message text-center"\r\n>\r\n  Please enter a quantity\r\n  <br />\r\n</small>\r\n',styles:[""]}]}],t.ctorParameters=function(){return[]},t.propDecorators={limits:[{type:e.Input}],existingQty:[{type:e.Input}],qtyChange:[{type:e.Output}]},t}();var h=function(){function t(){this.products=[],this.setIsFavorite=new e.EventEmitter,this.navigateToProductDetails=new e.EventEmitter,this.index=0,this.rowLength=4,this.faAngleLeft=i.faAngleLeft,this.faAngleRight=i.faAngleRight}return t.prototype.left=function(){this.index-=this.rowLength},t.prototype.right=function(){this.index+=this.rowLength},t.prototype.getProducts=function(){return this.products.slice(this.index,this.index+this.rowLength)},t.prototype.isFavorite=function(t){return this.favoriteProducts.includes(t)},t.prototype.setIsFavoriteEvent=function(t,e){this.setIsFavorite.emit({isFavorite:t,productID:e})},t.prototype.toDetails=function(t){this.navigateToProductDetails.emit({productID:t})},t.decorators=[{type:e.Component,args:[{template:'<h3 class="my-4 text-center">{{ displayTitle }}</h3>\r\n<div class="row align-items-center">\r\n  <div class="col-1 carousel-arrow">\r\n    <fa-icon [icon]="faAngleLeft"\r\n             *ngIf="index > 0"\r\n             (click)="left()"></fa-icon>\r\n  </div>\r\n  <div class="col-10 product-list-grid row d-flex align-items-stretch">\r\n    <ocm-product-card *ngFor="let product of getProducts(); let i = index"\r\n                      class="col-lg-3 col-md-4 col-sm-6 d-flex flex-grow-1 flex-shrink-1"\r\n                      [product]="product"\r\n                      [quantityLimits]="quantityLimits[i]"\r\n                      [isFavorite]="isFavorite(product.ID)"\r\n                      (setIsFavorite)="setIsFavoriteEvent($event.detail, product.ID)"\r\n                      (routeToProductDetails)="toDetails($event.detail)">\r\n    </ocm-product-card>\r\n  </div>\r\n  <div class="col-1 carousel-arrow">\r\n    <fa-icon [icon]="faAngleRight"\r\n             *ngIf="index <= products.length - rowLength - 1"\r\n             (click)="right()"></fa-icon>\r\n  </div>\r\n</div>',styles:[""]}]}],t.propDecorators={products:[{type:e.Input}],displayTitle:[{type:e.Input}],quantityLimits:[{type:e.Input}],favoriteProducts:[{type:e.Input}],setIsFavorite:[{type:e.Output}],navigateToProductDetails:[{type:e.Output}]},t}();var f=function(){function t(t){this.changeDetectorRef=t,this.addToCartEvent=new e.EventEmitter,this.setIsFavorite=new e.EventEmitter,this.quantityInputReady=!1,this.specSelections=[],this.imageUrls=[],this.isOrderable=!1,this.hasPrice=!1}return t.prototype.ngOnChanges=function(){this.product&&(this.isOrderable=!!this.product.PriceSchedule,this.hasPrice=r.has(this.product,"PriceSchedule.PriceBreaks[0].Price"),this.imageUrls=this.getImageUrls())},t.prototype.addToCart=function(){var t=this.specSelections.map(function(t){return{SpecID:t.SpecID,OptionID:t.ID,Value:t.Value}});this.addToCartEvent.emit({ProductID:this.product.ID,Quantity:this.quantity,Specs:t})},t.prototype.getTotalPrice=function(){var t=this;if(!this.quantity)return null;if(!this.hasPrice)return 0;var e=this.product.PriceSchedule.PriceBreaks,n=r.minBy(e,"Quantity"),i=e.reduce(function(e,n){return n.Quantity>e.Quantity&&n.Quantity<=t.quantity?n:e},n),s=this.totalSpecMarkup(i.Price,this.quantity);return(i.Price+s)*this.quantity},t.prototype.totalSpecMarkup=function(t,e){var n=this;return this.specSelections.map(function(r){return n.singleSpecMarkup(t,e,r)}).reduce(function(t,e){return t+e},0)},t.prototype.singleSpecMarkup=function(t,e,n){switch(n.PriceMarkupType){case"NoMarkup":return 0;case"AmountPerQuantity":return n.PriceMarkup;case"AmountTotal":return n.PriceMarkup/e;case"Percentage":return n.PriceMarkup*t*.01}},t.prototype.getImageUrls=function(){return(this.product.xp.Images||[]).map(function(t){return t.Url.replace("{url}","https://s3.dualstack.us-east-1.amazonaws.com/staticcintas.eretailing.com/images/product")})},t.prototype.ngAfterViewChecked=function(){this.changeDetectorRef.detectChanges()},t.decorators=[{type:e.Component,args:[{template:'<div class="container mt-4" *ngIf="product">\r\n  <div class="row mb-5">\r\n    <div class="col-md-6">\r\n      <div class="position-relative d-block">\r\n        <ocm-image-gallery [imgUrls]="imageUrls"></ocm-image-gallery>\r\n      </div>\r\n    </div>\r\n    <div class="col-md-6 bg-light">\r\n      <h1 class="h1 my-0">{{ product.Name }}</h1>\r\n      <div class="d-flex mt-2">\r\n        <div class="mt-2 text-muted">ID: {{ product.ID }}</div>\r\n        <div class="mt-2 ml-3">\r\n          <ocm-toggle-favorite title="Favorite"\r\n                               (click)="$event.stopPropagation()"\r\n                               [favorite]="isFavorite"\r\n                               (favoriteChanged)="setIsFavorite.emit($event.detail)">\r\n          </ocm-toggle-favorite>\r\n        </div>\r\n        <div class="ml-auto"\r\n             *ngIf="isOrderable">\r\n          <ocm-quantity-input class="d-inline-block"\r\n                              style="max-width: 100px"\r\n                              [limits]="quantityLimits"\r\n                              (qtyChange)="quantity = $event.detail">\r\n          </ocm-quantity-input>\r\n          <button class="btn btn-primary ml-2"\r\n                  type="submit"\r\n                  (click)="addToCart()">\r\n            Add to Cart\r\n            <span class="badge badge-light ml-2">{{\r\n              getTotalPrice() | currency\r\n            }}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <p class="mt-4"\r\n         [innerHTML]="product.Description || \'This product has no description.\'"></p>\r\n      <ocm-spec-form *ngIf="isOrderable && specs.Items.length > 0"\r\n                     [specs]="specs.Items"\r\n                     (formUpdated)="specSelections = $event.detail"></ocm-spec-form>\r\n      <div *ngIf="!isOrderable"\r\n           class="alert alert-info">\r\n        This is a view-only product and cannot be ordered\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf="relatedProducts$ | async; let relatedProducts">\r\n    <ocm-product-carousel *ngIf="relatedProducts.length > 0"\r\n                          displayTitle="Related Products"\r\n                          [products]="relatedProducts">\r\n    </ocm-product-carousel>\r\n  </div>\r\n</div>',styles:[".make-inline{max-width:100px}"]}]}],t.ctorParameters=function(){return[{type:e.ChangeDetectorRef}]},t.propDecorators={specs:[{type:e.Input}],product:[{type:e.Input}],isFavorite:[{type:e.Input}],quantityLimits:[{type:e.Input}],addToCartEvent:[{type:e.Output}],setIsFavorite:[{type:e.Output}]},t}();var y=function(){function t(){this.imgUrls=[],this.gallerySize=5,this.selectedIndex=0,this.startIndex=0,this.endIndex=this.gallerySize-1,this.faAngleLeft=i.faAngleLeft,this.faAngleRight=i.faAngleRight,this.isResponsiveView=window.innerWidth>900}return t.prototype.ngOnInit=function(){var t=this;l.fromEvent(window,"resize").subscribe(function(){return t.onResize()})},t.prototype.onResize=function(){this.isResponsiveView=window.innerWidth>900},t.prototype.select=function(t){this.selectedIndex=this.imgUrls.indexOf(t)},t.prototype.isSelected=function(t){return this.imgUrls.indexOf(t)===this.selectedIndex},t.prototype.getGallery=function(){return this.imgUrls.slice(this.startIndex,this.endIndex+1)},t.prototype.forward=function(){this.selectedIndex++,this.selectedIndex>Math.min(this.endIndex,this.imgUrls.length-1)&&(this.startIndex++,this.endIndex++,this.selectedIndex===this.imgUrls.length&&(this.selectedIndex=0,this.startIndex=0,this.endIndex=this.gallerySize-1))},t.prototype.backward=function(){this.selectedIndex--,this.selectedIndex<this.startIndex&&(this.startIndex--,this.endIndex--,-1===this.selectedIndex&&(this.selectedIndex=this.imgUrls.length-1,this.endIndex=this.imgUrls.length-1,this.startIndex=Math.max(this.imgUrls.length-this.gallerySize,0)))},t.decorators=[{type:e.Component,args:[{template:'<div class="bg-light">\r\n  <div>\r\n    <ngx-image-zoom class="img-fluid mx-auto d-block pt-2 px-2"\r\n                    appFallbackImage\r\n                    [thumbImage]="imgUrls && imgUrls[selectedIndex] ? imgUrls[selectedIndex] : \'http://placehold.it/500x500\'"\r\n                    [fullImage]="imgUrls && imgUrls[selectedIndex] ? imgUrls[selectedIndex] : []"\r\n                    [zoomMode]="\'hover\'"\r\n                    [enableScrollZoom]="true"\r\n                    [enableLens]="true"\r\n                    [lensWidth]="250"\r\n                    [lensHeight]="250"\r\n                    [circularLens]="true"\r\n                    [magnification]="2"></ngx-image-zoom>\r\n  </div>\r\n  <div>\r\n    <div class="gallery-container row"\r\n         *ngIf="imgUrls.length > 1">\r\n      <div class="col carousel-arrow"\r\n           (click)="backward()">\r\n        <fa-icon [icon]="faAngleLeft"></fa-icon>\r\n      </div>\r\n      <div class="col gallery-item"\r\n           [ngClass]="{\'active\' : isSelected(url) }"\r\n           *ngFor="let url of  getGallery()"\r\n           (click)="select(url)">\r\n        <img [src]="url">\r\n      </div>\r\n      <div class="col carousel-arrow"\r\n           (click)="forward()">\r\n        <fa-icon [icon]="faAngleRight"></fa-icon>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>',styles:[".gallery-container{padding-top:10px;padding-bottom:10px}.gallery-container .gallery-item{opacity:.5;padding:3px!important}.gallery-container .gallery-item img{width:70px;height:70px}.gallery-container .gallery-item.active{opacity:1}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={imgUrls:[{type:e.Input}]},t}();var v=function(){function t(){this.specs=[],this.formUpdated=new e.EventEmitter,this.specForm=new o.FormGroup({})}return t.prototype.ngOnInit=function(){},t.prototype.ngOnChanges=function(){var t=this;this.specs&&(this.specs=this.specs.sort(function(t,e){return t.Options.length-e.Options.length}),this.specs.forEach(function(e){var n=t.getDefaultOptionID(e),r=new o.FormControl(n,e.Required?[o.Validators.required]:[]);t.specForm.addControl(e.ID,r)}),this.onChange())},t.prototype.getDefaultOptionID=function(t){return t.DefaultOptionID?t.DefaultOptionID:t.Required?r.get(t,"Options[0].ID",null):null},t.prototype.onChange=function(){var t=this,e=r.keys(r.pickBy(this.specForm.value,r.identity)).map(function(e){var n=t.specs.find(function(t){return t.ID===e}),r=t.specForm.value[e],i=n.Options.find(function(t){return t.ID===r});return i.SpecID=e,i});this.formUpdated.emit(e)},t.decorators=[{type:e.Component,args:[{template:'<form [formGroup]="specForm">\r\n  <div *ngFor="let spec of specs"\r\n       class="my-1">\r\n    <div class="mr-2">\r\n      <b>{{spec.Name}}<span *ngIf="spec.Required && spec.Options.length > 1">*</span>: </b><span *ngIf="spec.Options.length === 1">{{ spec.Options[0].Value }}</span>\r\n    </div>\r\n    <select *ngIf="spec.Options.length > 1"\r\n            class="custom-select"\r\n            [formControlName]="spec.ID"\r\n            (change)="onChange()">\r\n      <option *ngIf="!spec.Required"\r\n              value="null"></option>\r\n      <option *ngFor="let option of spec.Options"\r\n              [ngValue]="option.ID">\r\n        {{ option.Value }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</form>',styles:[""]}]}],t.ctorParameters=function(){return[]},t.propDecorators={specs:[{type:e.Input}],formUpdated:[{type:e.Output}]},t}();var I=function(){function t(){}return t.prototype.display=function(t){return this.order.xp&&this.order.xp.AddOnsCalculated?0===this.order[""+t]?"Free":new u.CurrencyPipe("en-US").transform(this.order[""+t]):"Calculated during checkout"},t.decorators=[{type:e.Component,args:[{template:'<div class="card mb-1" *ngIf="order">\r\n  <h5 class="card-header">Order Summary</h5>\r\n  <div class="card-body">\r\n    <h6 class="card-title">{{order.LineItemCount}} Item(s) in Your Cart</h6>\r\n    <div class="text-right"><b class="float-left">Subtotal</b><span class="sub-total">{{order.Subtotal | currency}}</span></div>\r\n    <div class="text-right"><b class="float-left">Shipping</b><span class="shipping-cost">{{ display(\'ShippingCost\') }}</span></div>\r\n    <div class="text-right"><b class="float-left">Tax</b><span class="tax-cost">{{ display(\'TaxCost\') }}</span></div>\r\n    <hr>\r\n    <div class="text-right lead"><b class="float-left">Total</b><span class="order-total">{{order.Total | currency}}</span></div>\r\n  </div>\r\n</div>',styles:[""]}]}],t.ctorParameters=function(){return[]},t.propDecorators={order:[{type:e.Input}]},t}();var b=function(){function t(){this.closeIcon=i.faTimes,this.deleteLineItem=new e.EventEmitter,this.updateQuantity=new e.EventEmitter,this.navigateToProductDetails=new e.EventEmitter}return t.prototype.log=function(t){console.log(t),console.log(this.lineItems)},t.prototype.removeLineItem=function(t){this.deleteLineItem.emit({lineItemID:t})},t.prototype.changeQuantity=function(t,e){this.getLineItem(t).Quantity=e,this.updateQuantity.emit({lineItemID:t,quantity:e})},t.prototype.getImageUrl=function(t){return r.get(this.getLineItem(t),"Product.xp.Images[0].Url","http://placehold.it/300x300")},t.prototype.getLineItem=function(t){return this.lineItems.Items.find(function(e){return e.ID===t})},t.decorators=[{type:e.Component,args:[{selector:"ocm-lineitem-table",template:'<div class="card border shadow-sm mb-4">\r\n  <div class="card-header p-3">\r\n    <div class="row">\r\n      <div class="col">\r\n        <h5 class="card-title mb-0">\r\n          Line Items\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="px-3 pt-2 d-none d-sm-block border-bottom">\r\n    <div class="row">\r\n      <div class="col-sm-7">\r\n      </div>\r\n      <div class="col-sm-5">\r\n        <div class="row">\r\n          <div class="col-4 text-center">\r\n            <h6>Price</h6>\r\n          </div>\r\n          <div class="col-4 text-center">\r\n            <h6>Qty</h6>\r\n          </div>\r\n          <div class="col-4 text-center">\r\n            <h6>Total</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <a (click)="log(lineItems)">click</a>\r\n  <div class="flex-none">\r\n    {{ lineItems.Items.length }}\r\n    <div *ngFor="let li of lineItems.Items; let i = index">\r\n      {{i}}\r\n      <div class="m-2 row align-items-center">\r\n        <div class="col-sm-7">\r\n          <div class="row align-items-sm-center">\r\n            <div class="col-3 p-0">\r\n              <img class="img-thumbnail"\r\n                   appFallbackImage\r\n                   [src]="getImageUrl(li.ID)">\r\n            </div>\r\n            <div class="col-9">\r\n              <h6>\r\n                <a (click)="navigateToProductDetails.emit({ productID: li.Product.ID })"\r\n                   class="text-primary link">{{li.Product.Name}}</a>\r\n                <small class="text-muted d-block">{{li.Product.ID}}</small>\r\n              </h6>\r\n              <a class="text-danger btn btn-link px-0 link"\r\n                 *ngIf="!readOnly"\r\n                 (click)="removeLineItem(li.ID)">Remove Item</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="col-sm-5">\r\n          <div class="row align-items-center pt-3 pt-sm-0">\r\n            <div class="col-4 text-center">\r\n              <span class="d-block d-sm-none">Unit Price</span>\r\n              <span class="text-nowrap">{{li.UnitPrice | currency}}</span>\r\n            </div>\r\n            <div class="col-4 text-center">\r\n              <span class="d-block d-sm-none">Qty</span>\r\n              <ocm-quantity-input *ngIf="!readOnly"\r\n                                  [limits]="quantityLimits[i]"\r\n                                  [existingQty]="li.Quantity"\r\n                                  (qtyChange)="changeQuantity(li.ID, $event.detail)"></ocm-quantity-input>\r\n              <span class="text-nowrap"\r\n                    *ngIf="readOnly">&times;{{ li.Quantity | number }}</span>\r\n            </div>\r\n            <div class="col-4 text-right">\r\n              <span class="d-block d-sm-none">Total</span>\r\n              <span class="text-nowrap">{{ li.LineTotal | currency }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \x3c!-- hr only visible on mobile to more clearly distinguish between line items --\x3e\r\n      <hr class="pb-4 d-block d-sm-none">\r\n    </div>\r\n  </div>\r\n</div>',styles:[".link{cursor:pointer}.link:hover{text-decoration:underline!important}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={lineItems:[{type:e.Input}],readOnly:[{type:e.Input}],quantityLimits:[{type:e.Input}],deleteLineItem:[{type:e.Output}],updateQuantity:[{type:e.Output}],navigateToProductDetails:[{type:e.Output}]},t}();var x=function(){function t(){this.emptyCart=new e.EventEmitter,this.deleteLineItem=new e.EventEmitter,this.updateQuantity=new e.EventEmitter,this.navigateToProductDetails=new e.EventEmitter,this.navigateToProductList=new e.EventEmitter,this.navigateToCheckout=new e.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.log=function(t){console.log(t),console.log(this.lineItems)},t.decorators=[{type:e.Component,args:[{template:'<div class="mb-3 bg-quaternary">\r\n  <div class="container py-3">\r\n    <h1 class="display-4 m-0 headline-text text-center">\r\n      Shopping Cart\r\n    </h1>\r\n  </div>\r\n</div>\r\n<div class="container">\r\n  <div class="my-3 d-flex justify-content-between">\r\n    <button class="btn btn-outline-dark"\r\n            (click)="navigateToProductList.emit()">Continue Shopping</button>\r\n    <button class="btn btn-outline-danger"\r\n            *ngIf="order?.LineItemCount"\r\n            (click)="emptyCart.emit()">Empty Cart</button>\r\n  </div>\r\n  <div class="card bg-light p-3 flex-row justify-content-center"\r\n       *ngIf="!order?.LineItemCount">\r\n    <p class="mb-0">You do not have any items in your cart</p>\r\n  </div>\r\n  <div class="row flex-lg-row-reverse"\r\n       *ngIf="order?.LineItemCount">\r\n    <div class="col-lg-4">\r\n      <ocm-order-summary [order]="order"></ocm-order-summary>\r\n      <button class="btn btn-primary btn-block mb-4 font-weight-bold"\r\n             (click)="navigateToCheckout.emit()">CHECKOUT</button>\r\n    </div>\r\n    <div class="col-lg-8">\r\n      {{ lineItems }}\r\n      <a (click)="log(lineItems)">click</a>\r\n      <ocm-lineitem-table [lineItems]="lineItems"\r\n                          [readOnly]="false"\r\n                          [quantityLimits]="quantityLimits"\r\n                          (deleteLineItem)="deleteLineItem.emit($event)"\r\n                          (updateQuantity)="updateQuantity.emit($event)"\r\n                          (navigateToProductDetails)="navigateToProductDetails.emit($event)">\r\n      </ocm-lineitem-table>\r\n    </div>\r\n  </div>\r\n</div>',styles:[""]}]}],t.propDecorators={order:[{type:e.Input}],lineItems:[{type:e.Input}],quantityLimits:[{type:e.Input}],emptyCart:[{type:e.Output}],deleteLineItem:[{type:e.Output}],updateQuantity:[{type:e.Output}],navigateToProductDetails:[{type:e.Output}],navigateToProductList:[{type:e.Output}],navigateToCheckout:[{type:e.Output}]},t}();var C=function(){function t(t){this.injector=t,this.buildWebComponent(g,"ocm-quantity-input"),this.buildWebComponent(p,"ocm-product-card"),this.buildWebComponent(m,"ocm-toggle-favorite"),this.buildWebComponent(f,"ocm-product-details"),this.buildWebComponent(h,"ocm-product-carousel"),this.buildWebComponent(y,"ocm-image-gallery"),this.buildWebComponent(v,"ocm-spec-form"),this.buildWebComponent(I,"ocm-order-summary"),this.buildWebComponent(b,"ocm-lineitem-table"),this.buildWebComponent(x,"ocm-cart")}return t.prototype.buildWebComponent=function(t,e){var r=n.createCustomElement(t,{injector:this.injector});customElements.get(e)||customElements.define(e,r)},t.decorators=[{type:e.NgModule,args:[{schemas:[e.CUSTOM_ELEMENTS_SCHEMA],declarations:[p,m,g,h,f,y,v,I,b,x],entryComponents:[m,p,g,h,f,y,v,I,b,x],imports:[u.CommonModule,c.NgxImageZoomModule,o.ReactiveFormsModule,d.FontAwesomeModule]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t}();t.OcmComponentsModule=C,t.ɵa=p,t.ɵb=m,t.ɵc=g,t.ɵd=h,t.ɵe=f,t.ɵf=y,t.ɵg=v,t.ɵh=I,t.ɵi=b,t.ɵj=x,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ocm-components.umd.min.js.map