{"version":3,"sources":["ng://ocm-components/components/exposed/product-card/product-card.component.ts","ng://ocm-components/components/exposed/toggle-favorite/toggle-favorite.component.ts","ng://ocm-components/components/internal/quantity-input/quantity-input.component.ts","ng://ocm-components/components/exposed/product-carousel/product-carousel.component.ts","ng://ocm-components/components/exposed/product-details/product-details.component.ts","ng://ocm-components/components/internal/image-gallery/image-gallery.component.ts","ng://ocm-components/components/internal/spec-form/spec-form.component.ts","ng://ocm-components/components/exposed/order-summary/order-summary.component.ts","ng://ocm-components/components/exposed/lineitem-table/lineitem-table.component.ts","ng://ocm-components/components/exposed/cart/cart.component.ts","ng://ocm-components/components/ocm-components.module.ts"],"names":["OCMProductCard","this","product","PriceSchedule","xp","Images","quantityLimits","inventory","maxPerOrder","minPerOrder","restrictedQuantities","addedToCart","EventEmitter","setIsFavorite","routeToProductDetails","prototype","ngOnChanges","isSetFavoriteUsed","observers","length","isAddedToCartUsed","isViewOnlyProduct","hasSpecs","SpecCount","shouldDisplayAddToCart","ngOnInit","addToCart","li","emit","getImageUrl","images","result","_map","img","Url","replace","filtered","_without","undefined","toDetails","ID","Component","args","template","encapsulation","ViewEncapsulation","None","Input","Output","OCMToggleFavorite","faHeartFilled","_faHeartFilled","faHeartOutline","_faHeartOutline","favoriteChanged","OCMQuantityInput","qtyChange","isDefaultSet","isQtyRestricted","form","FormGroup","quantity","FormControl","Validators","required","limits","setDefault","quantityChangeListener","existingQty","get","value","setValue","getDefaultQty","_this","valueChanges","pipe","debounceTime","subscribe","valid","isNaN","OCMProductCarousel","products","navigateToProductDetails","index","rowLength","faAngleLeft","faAngleRight","left","right","getProducts","slice","isFavorite","productID","favoriteProducts","includes","setIsFavoriteEvent","OCMProductDetails","changeDetectorRef","addToCartEvent","quantityInputReady","specSelections","imageUrls","isOrderable","hasPrice","_has","getImageUrls","Specs","map","o","SpecID","OptionID","Value","ProductID","Quantity","getTotalPrice","priceBreaks","PriceBreaks","startingBreak","_minBy","selectedBreak","reduce","current","candidate","markup","totalSpecMarkup","Price","unitPrice","s","singleSpecMarkup","x","acc","spec","PriceMarkupType","PriceMarkup","i","ngAfterViewChecked","detectChanges","ChangeDetectorRef","OCMImageGallery","imgUrls","gallerySize","selectedIndex","startIndex","endIndex","isResponsiveView","window","innerWidth","fromEvent","onResize","select","url","indexOf","isSelected","getGallery","forward","Math","min","backward","max","OCMSpecForm","specs","formUpdated","specForm","sort","s1","s2","Options","forEach","defaultOption","getDefaultOptionID","input","Required","addControl","onChange","DefaultOptionID","_get","selections","_keys","_pickBy","_identity","specID","find","optionID","option","OCMOrderSummary","display","field","order","AddOnsCalculated","CurrencyPipe","transform","OCMLineitemTable","closeIcon","faTimes","deleteLineItem","updateQuantity","log","object","console","lineItems","removeLineItem","lineItemID","changeQuantity","getLineItem","Items","selector","OCMCart","emptyCart","navigateToProductList","navigateToCheckout","OcmComponentsModule","injector","buildWebComponent","angularComponent","htmlTagName","component","createCustomElement","customElements","define","NgModule","schemas","CUSTOM_ELEMENTS_SCHEMA","declarations","entryComponents","imports","CommonModule","NgxImageZoomModule","ReactiveFormsModule","FontAwesomeModule","Injector"],"mappings":"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","sourcesContent":["import { Component, Input, EventEmitter, Output, OnInit, ViewEncapsulation, OnChanges } from '@angular/core';\r\nimport { BuyerProduct, LineItem } from '@ordercloud/angular-sdk';\r\nimport { find as _find, get as _get, map as _map, without as _without } from 'lodash';\r\nimport { QuantityLimits } from '../../../models/quantity-limits';\r\n\r\n@Component({\r\n  templateUrl: './product-card.component.html',\r\n  styleUrls: ['./product-card.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class OCMProductCard implements OnInit, OnChanges {\r\n  @Input() product: BuyerProduct = {\r\n    PriceSchedule: {},\r\n    xp: { Images: [] },\r\n  };\r\n  @Input() isFavorite: boolean;\r\n  @Input() quantityLimits: QuantityLimits = {\r\n    inventory: 0,\r\n    maxPerOrder: 0,\r\n    minPerOrder: 0,\r\n    restrictedQuantities: [],\r\n  };\r\n  @Output() addedToCart = new EventEmitter<LineItem>();\r\n  @Output() setIsFavorite = new EventEmitter<boolean>();\r\n  @Output() routeToProductDetails = new EventEmitter<string>();\r\n\r\n  quantity: number;\r\n  shouldDisplayAddToCart: boolean;\r\n  isViewOnlyProduct: boolean;\r\n  isSetFavoriteUsed: boolean;\r\n  hasSpecs: boolean;\r\n\r\n  ngOnChanges() {\r\n    this.isSetFavoriteUsed = this.setIsFavorite.observers.length > 0;\r\n    const isAddedToCartUsed = this.addedToCart.observers.length > 0;\r\n    this.isViewOnlyProduct = !this.product.PriceSchedule;\r\n    this.hasSpecs = this.product.SpecCount > 0;\r\n    this.shouldDisplayAddToCart = isAddedToCartUsed && !this.isViewOnlyProduct && !this.hasSpecs;\r\n  }\r\n  ngOnInit() {\r\n    /**\r\n     * this will be true if the parent component\r\n     * is wired up to listen to the outputted event\r\n     */\r\n  }\r\n\r\n  addToCart(li: LineItem) {\r\n    this.addedToCart.emit(li);\r\n  }\r\n\r\n  getImageUrl() {\r\n    const host = 'https://s3.dualstack.us-east-1.amazonaws.com/staticcintas.eretailing.com/images/product';\r\n    const images = this.product.xp.Images || [];\r\n    const result = _map(images, (img) => {\r\n      return img.Url.replace('{url}', host);\r\n    });\r\n    const filtered = _without(result, undefined);\r\n    return filtered.length > 0 ? filtered[0] : 'http://placehold.it/300x300';\r\n  }\r\n\r\n  toDetails() {\r\n    this.routeToProductDetails.emit(this.product.ID);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { faHeart as _faHeartFilled } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHeart as _faHeartOutline } from '@fortawesome/free-regular-svg-icons';\r\n\r\n@Component({\r\n  templateUrl: './toggle-favorite.component.html',\r\n  styleUrls: ['./toggle-favorite.component.scss'],\r\n})\r\nexport class OCMToggleFavorite {\r\n  faHeartFilled = _faHeartFilled;\r\n  faHeartOutline = _faHeartOutline;\r\n  @Input() favorite: boolean;\r\n  @Output() favoriteChanged = new EventEmitter<boolean>();\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { get as _get } from 'lodash';\r\nimport { QuantityLimits } from '../../../models/quantity-limits';\r\n\r\n@Component({\r\n  templateUrl: './quantity-input.component.html',\r\n  styleUrls: ['./quantity-input.component.scss'],\r\n})\r\nexport class OCMQuantityInput implements OnInit, OnChanges {\r\n  @Input() limits: QuantityLimits;\r\n  @Input() existingQty: number;\r\n  @Output() qtyChange = new EventEmitter<number>();\r\n\r\n  form: FormGroup;\r\n  isDefaultSet = false;\r\n  isQtyRestricted = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      quantity: new FormControl(1, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (!this.limits) return;\r\n    this.isQtyRestricted = this.limits.restrictedQuantities.length !== 0;\r\n    if (!this.isDefaultSet) this.setDefault(); // capture default once inputs are set\r\n    this.quantityChangeListener();\r\n    if (!this.existingQty) {\r\n      this.qtyChange.emit(this.form.get('quantity').value);\r\n    }\r\n  }\r\n\r\n  setDefault() {\r\n    this.isDefaultSet = true;\r\n    this.form.setValue({ quantity: this.getDefaultQty() });\r\n  }\r\n\r\n  quantityChangeListener(): void {\r\n    this.form.valueChanges.pipe(debounceTime(500)).subscribe(() => {\r\n      if (this.form.valid && !isNaN(this.form.value.quantity)) {\r\n        this.qtyChange.emit(this.form.value.quantity);\r\n      }\r\n    });\r\n  }\r\n\r\n  getDefaultQty(): number {\r\n    if (this.existingQty) return this.existingQty;\r\n    if (this.limits.restrictedQuantities.length) return this.limits.restrictedQuantities[0];\r\n    return this.limits.minPerOrder;\r\n  }\r\n\r\n  // TODO - handle these error situations\r\n\r\n  // if (inventory < min) {\r\n  //   error.ProductQuantityError.message = `Out of stock.`;\r\n  //   error.ProductQuantityError.outOfStock = true;\r\n  //   return error;\r\n  // }\r\n  // if (qty < min) {\r\n  //   error.ProductQuantityError.message = `At least ${min} must be ordered.`;\r\n  //   return error;\r\n  // }\r\n  // if (qty > inventory) {\r\n  //   error.ProductQuantityError.message = `Only ${inventory} available in inventory.`;\r\n  //   return error;\r\n  // }\r\n  // if (qty > max) {\r\n  //   error.ProductQuantityError.message = `At most ${max} allowed per order.`;\r\n  //   return error;\r\n  // }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { BuyerProduct } from '@ordercloud/angular-sdk';\r\nimport { QuantityLimits } from '../../../models/quantity-limits';\r\n\r\n@Component({\r\n  templateUrl: './product-carousel.component.html',\r\n  styleUrls: ['./product-carousel.component.scss'],\r\n})\r\nexport class OCMProductCarousel {\r\n  @Input() products: BuyerProduct[] = [];\r\n  @Input() displayTitle: string;\r\n  @Input() quantityLimits: QuantityLimits[];\r\n  @Input() favoriteProducts: string[];\r\n  @Output() setIsFavorite = new EventEmitter<{isFavorite: boolean, productID: string}>();\r\n  @Output() navigateToProductDetails = new EventEmitter<{productID: string}>();\r\n\r\n  index = 0;\r\n  rowLength = 4;\r\n  faAngleLeft = faAngleLeft;\r\n  faAngleRight = faAngleRight;\r\n\r\n  left(): void {\r\n    this.index -= this.rowLength;\r\n  }\r\n\r\n  right(): void {\r\n    this.index += this.rowLength;\r\n  }\r\n\r\n  getProducts(): BuyerProduct[] {\r\n    return this.products.slice(this.index, this.index + this.rowLength);\r\n  }\r\n\r\n  isFavorite(productID: string): boolean {\r\n    return this.favoriteProducts.includes(productID);\r\n  }\r\n\r\n  setIsFavoriteEvent(isFavorite: boolean, productID: string): void {\r\n    this.setIsFavorite.emit({ isFavorite, productID });\r\n  }\r\n\r\n  toDetails(productID: string): void {\r\n    this.navigateToProductDetails.emit({ productID });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, AfterViewChecked, OnChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BuyerProduct, BuyerSpec, LineItem, ListSpec } from '@ordercloud/angular-sdk';\r\nimport { find as _find, difference as _difference, minBy as _minBy, has as _has } from 'lodash';\r\nimport { QuantityLimits } from '../../../models/quantity-limits';\r\nimport { FullSpecOption } from '../../../models/full-spec-option.interface';\r\n\r\n@Component({\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss'],\r\n})\r\nexport class OCMProductDetails implements OnChanges, AfterViewChecked {\r\n  @Input() specs: ListSpec;\r\n  @Input() product: BuyerProduct;\r\n  @Input() isFavorite: boolean;\r\n  @Input() quantityLimits: QuantityLimits;\r\n  @Output() addToCartEvent = new EventEmitter<LineItem>();\r\n  @Output() setIsFavorite = new EventEmitter<boolean>();\r\n\r\n  quantity: number;\r\n  quantityInputReady = false;\r\n  specSelections: FullSpecOption[] = [];\r\n  relatedProducts$: Observable<BuyerProduct[]>;\r\n  imageUrls: string[] = [];\r\n  isOrderable = false;\r\n  hasPrice = false;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges() {\r\n    if (!this.product) return;\r\n    // products without a price schedule are view-only.\r\n    this.isOrderable = !!this.product.PriceSchedule;\r\n    // free products dont need to display a price.\r\n    this.hasPrice = _has(this.product, 'PriceSchedule.PriceBreaks[0].Price');\r\n    this.imageUrls = this.getImageUrls();\r\n  }\r\n\r\n  addToCart(): void {\r\n    const Specs = this.specSelections.map((o) => ({\r\n      SpecID: o.SpecID,\r\n      OptionID: o.ID,\r\n      Value: o.Value,\r\n    }));\r\n    this.addToCartEvent.emit({\r\n      ProductID: this.product.ID,\r\n      Quantity: this.quantity,\r\n      Specs,\r\n    });\r\n  }\r\n\r\n  getTotalPrice(): number {\r\n    // In OC, the price per item can depend on the quantity ordered. This info is stored on the PriceSchedule as a list of PriceBreaks.\r\n    // Find the PriceBreak with the highest Quantity less than the quantity ordered. The price on that price break\r\n    // is the cost per item.\r\n    if (!this.quantity) {\r\n      return null;\r\n    }\r\n    if (!this.hasPrice) {\r\n      return 0;\r\n    }\r\n    const priceBreaks = this.product.PriceSchedule.PriceBreaks;\r\n    const startingBreak = _minBy(priceBreaks, 'Quantity');\r\n\r\n    const selectedBreak = priceBreaks.reduce((current, candidate) => {\r\n      return candidate.Quantity > current.Quantity && candidate.Quantity <= this.quantity ? candidate : current;\r\n    }, startingBreak);\r\n    const markup = this.totalSpecMarkup(selectedBreak.Price, this.quantity);\r\n\r\n    return (selectedBreak.Price + markup) * this.quantity;\r\n  }\r\n\r\n  totalSpecMarkup(unitPrice: number, quantity: number): number {\r\n    const markups = this.specSelections.map((s) => this.singleSpecMarkup(unitPrice, quantity, s));\r\n    return markups.reduce((x, acc) => x + acc, 0); // sum\r\n  }\r\n\r\n  singleSpecMarkup(unitPrice: number, quantity: number, spec: FullSpecOption): number {\r\n    switch (spec.PriceMarkupType) {\r\n      case 'NoMarkup':\r\n        return 0;\r\n      case 'AmountPerQuantity':\r\n        return spec.PriceMarkup;\r\n      case 'AmountTotal':\r\n        return spec.PriceMarkup / quantity;\r\n      case 'Percentage':\r\n        return spec.PriceMarkup * unitPrice * 0.01;\r\n    }\r\n  }\r\n\r\n  getImageUrls() {\r\n    const host = 'https://s3.dualstack.us-east-1.amazonaws.com/staticcintas.eretailing.com/images/product';\r\n    const images = this.product.xp.Images || [];\r\n    return images.map((i) => i.Url.replace('{url}', host));\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // This manually triggers angular's change detection cycle and avoids the imfamous\r\n    // \"Expression has changed after it was checked\" error.\r\n    // Caused by something in spec form\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { fromEvent } from 'rxjs';\r\n\r\n@Component({\r\n  templateUrl: './image-gallery.component.html',\r\n  styleUrls: ['./image-gallery.component.scss'],\r\n})\r\nexport class OCMImageGallery implements OnInit {\r\n  @Input() imgUrls: string[] = [];\r\n\r\n  // gallerySize can be changed and the component logic + behavior will all work. However, the UI may look wonky.\r\n  private readonly gallerySize = 5;\r\n  selectedIndex = 0;\r\n  startIndex = 0;\r\n  endIndex = this.gallerySize - 1;\r\n  faAngleLeft = faAngleLeft;\r\n  faAngleRight = faAngleRight;\r\n  isResponsiveView: boolean;\r\n\r\n  constructor() {\r\n    this.isResponsiveView = window.innerWidth > 900;\r\n  }\r\n  ngOnInit() {\r\n    fromEvent(window, 'resize').subscribe(() => this.onResize());\r\n  }\r\n\r\n  onResize() {\r\n    this.isResponsiveView = window.innerWidth > 900;\r\n  }\r\n\r\n  select(url: string): void {\r\n    this.selectedIndex = this.imgUrls.indexOf(url);\r\n  }\r\n\r\n  isSelected(url: string): boolean {\r\n    return this.imgUrls.indexOf(url) === this.selectedIndex;\r\n  }\r\n\r\n  getGallery(): string[] {\r\n    return this.imgUrls.slice(this.startIndex, this.endIndex + 1);\r\n  }\r\n\r\n  forward() {\r\n    this.selectedIndex++;\r\n    if (this.selectedIndex > Math.min(this.endIndex, this.imgUrls.length - 1)) {\r\n      // move images over one\r\n      this.startIndex++;\r\n      this.endIndex++;\r\n      if (this.selectedIndex === this.imgUrls.length) {\r\n        // cycle to the beginning\r\n        this.selectedIndex = 0;\r\n        this.startIndex = 0;\r\n        this.endIndex = this.gallerySize - 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  backward() {\r\n    this.selectedIndex--;\r\n    if (this.selectedIndex < this.startIndex) {\r\n      // move images over one\r\n      this.startIndex--;\r\n      this.endIndex--;\r\n      if (this.selectedIndex === -1) {\r\n        // cycle to the end\r\n        this.selectedIndex = this.imgUrls.length - 1;\r\n        this.endIndex = this.imgUrls.length - 1;\r\n        this.startIndex = Math.max(this.imgUrls.length - this.gallerySize, 0);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { BuyerSpec } from '@ordercloud/angular-sdk';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport {\r\n  get as _get,\r\n  find as _find,\r\n  keys as _keys,\r\n  pickBy as _pickBy,\r\n  identity as _identity,\r\n} from 'lodash';\r\nimport { FullSpecOption } from '../../../models/full-spec-option.interface';\r\nimport { __generator } from 'tslib';\r\n\r\n@Component({\r\n  templateUrl: './spec-form.component.html',\r\n  styleUrls: ['./spec-form.component.scss'],\r\n})\r\nexport class OCMSpecForm implements OnInit, OnChanges {\r\n  @Input() specs: BuyerSpec[] = [];\r\n  @Output() formUpdated = new EventEmitter<FullSpecOption[]>();\r\n  specForm: FormGroup;\r\n\r\n  constructor() {\r\n    this.specForm = new FormGroup({});\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (!this.specs) return;\r\n    this.specs = this.specs.sort((s1, s2) => s1.Options.length - s2.Options.length);\r\n    this.specs.forEach((spec) => {\r\n      const defaultOption = this.getDefaultOptionID(spec);\r\n      const input = new FormControl(defaultOption, spec.Required ? [Validators.required] : []);\r\n      this.specForm.addControl(spec.ID, input);\r\n    });\r\n    this.onChange();\r\n  }\r\n\r\n  getDefaultOptionID(spec: BuyerSpec): string {\r\n    if (spec.DefaultOptionID) return spec.DefaultOptionID;\r\n    if (!spec.Required) return null;\r\n    return _get(spec, 'Options[0].ID', null);\r\n  }\r\n\r\n  onChange() {\r\n    const specIDs = _keys(_pickBy(this.specForm.value, _identity));\r\n    const selections: FullSpecOption[] = specIDs.map((specID) => {\r\n      const spec = this.specs.find((s) => s.ID === specID);\r\n      const optionID = this.specForm.value[specID];\r\n      const option: any = spec.Options.find((o) => o.ID === optionID);\r\n      option.SpecID = specID;\r\n      return option;\r\n    });\r\n    this.formUpdated.emit(selections);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Order } from '@ordercloud/angular-sdk';\r\nimport { CurrencyPipe } from '@angular/common';\r\n\r\n@Component({\r\n  templateUrl: './order-summary.component.html',\r\n  styleUrls: ['./order-summary.component.scss'],\r\n})\r\nexport class OCMOrderSummary {\r\n  @Input() order: Order;\r\n\r\n  constructor() {}\r\n\r\n  display(field) {\r\n    if (!(this.order.xp && this.order.xp.AddOnsCalculated)) {\r\n      return 'Calculated during checkout';\r\n    }\r\n\r\n    if (this.order[`${field}`] === 0) {\r\n      return 'Free';\r\n    }\r\n\r\n    return new CurrencyPipe('en-US').transform(this.order[`${field}`]);\r\n  }\r\n}\r\n","import { Component, Output, Input, EventEmitter, OnInit, OnChanges } from '@angular/core';\r\nimport { LineItem, ListLineItem } from '@ordercloud/angular-sdk';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { get as _get } from 'lodash';\r\nimport { QuantityLimits } from '../../../models/quantity-limits';\r\n\r\n@Component({\r\n  selector: 'ocm-lineitem-table',\r\n  templateUrl: './lineitem-table.component.html',\r\n  styleUrls: ['./lineitem-table.component.scss'],\r\n})\r\nexport class OCMLineitemTable {\r\n  closeIcon = faTimes;\r\n  @Input() lineItems: ListLineItem;\r\n  @Input() readOnly: boolean;\r\n  @Input() quantityLimits: QuantityLimits[];\r\n  @Output() deleteLineItem = new EventEmitter<{ lineItemID: string }>();\r\n  @Output() updateQuantity = new EventEmitter<{ lineItemID: string; quantity: number }>();\r\n  @Output() navigateToProductDetails = new EventEmitter<{ productID: string }>();\r\n\r\n  constructor() {}\r\n\r\n  log(object: any) {\r\n    debugger;\r\n    console.log(object);\r\n    console.log(this.lineItems);\r\n  }\r\n\r\n  removeLineItem(lineItemID: string) {\r\n    this.deleteLineItem.emit({ lineItemID });\r\n  }\r\n\r\n  changeQuantity(lineItemID: string, quantity: number) {\r\n    this.getLineItem(lineItemID).Quantity = quantity;\r\n    this.updateQuantity.emit({ lineItemID, quantity });\r\n  }\r\n\r\n  getImageUrl(lineItemID: string) {\r\n    return _get(this.getLineItem(lineItemID), 'Product.xp.Images[0].Url', 'http://placehold.it/300x300');\r\n  }\r\n\r\n  getLineItem(lineItemID: string): LineItem {\r\n    return this.lineItems.Items.find((li) => li.ID === lineItemID);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { Order, ListLineItem } from '@ordercloud/angular-sdk';\r\nimport { QuantityLimits } from '../../../models/quantity-limits';\r\n\r\n@Component({\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.scss'],\r\n})\r\nexport class OCMCart implements OnInit {\r\n  @Input() order: Order;\r\n  @Input() lineItems: ListLineItem;\r\n  @Input() quantityLimits: QuantityLimits[];\r\n  @Output() emptyCart = new EventEmitter<void>();\r\n  @Output() deleteLineItem = new EventEmitter<{ lineItemID: string }>();\r\n  @Output() updateQuantity = new EventEmitter<{ lineItemID: string; quantity: number }>();\r\n  @Output() navigateToProductDetails = new EventEmitter<{ productID: string }>();\r\n  @Output() navigateToProductList = new EventEmitter<void>();\r\n  @Output() navigateToCheckout = new EventEmitter<void>();\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  log(object: any) {\r\n    console.log(object);\r\n    console.log(this.lineItems);\r\n  }\r\n}\r\n","import { NgModule, Injector, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { OCMProductCard } from './exposed/product-card/product-card.component';\nimport { OCMToggleFavorite } from './exposed/toggle-favorite/toggle-favorite.component';\nimport { OCMQuantityInput } from './internal/quantity-input/quantity-input.component';\nimport { OCMProductCarousel } from './exposed/product-carousel/product-carousel.component';\nimport { OCMProductDetails } from './exposed/product-details/product-details.component';\nimport { OCMImageGallery } from './internal/image-gallery/image-gallery.component';\nimport { OCMSpecForm } from './internal/spec-form/spec-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxImageZoomModule } from 'ngx-image-zoom';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CommonModule } from '@angular/common';\nimport { OCMOrderSummary } from './exposed/order-summary/order-summary.component';\nimport { OCMLineitemTable } from './exposed/lineitem-table/lineitem-table.component';\nimport { OCMCart } from './exposed/cart/cart.component';\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [\n    OCMProductCard,\n    OCMToggleFavorite,\n    OCMQuantityInput,\n    OCMProductCarousel,\n    OCMProductDetails,\n    OCMImageGallery,\n    OCMSpecForm,\n    OCMOrderSummary,\n    OCMLineitemTable,\n    OCMCart\n  ],\n  entryComponents: [\n    OCMToggleFavorite,\n    OCMProductCard,\n    OCMQuantityInput,\n    OCMProductCarousel,\n    OCMProductDetails,\n    OCMImageGallery,\n    OCMSpecForm,\n    OCMOrderSummary,\n    OCMLineitemTable,\n    OCMCart\n  ],\n  imports: [\n    CommonModule,\n    NgxImageZoomModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n  ],\n})\nexport class OcmComponentsModule {\n  constructor(private injector: Injector) {\n    this.buildWebComponent(OCMQuantityInput, 'ocm-quantity-input');\n    this.buildWebComponent(OCMProductCard, 'ocm-product-card');\n    this.buildWebComponent(OCMToggleFavorite, 'ocm-toggle-favorite');\n    this.buildWebComponent(OCMProductDetails, 'ocm-product-details');\n    this.buildWebComponent(OCMProductCarousel, 'ocm-product-carousel');\n    this.buildWebComponent(OCMImageGallery, 'ocm-image-gallery');\n    this.buildWebComponent(OCMSpecForm, 'ocm-spec-form');\n    this.buildWebComponent(OCMOrderSummary, 'ocm-order-summary');\n    this.buildWebComponent(OCMLineitemTable, 'ocm-lineitem-table');\n    this.buildWebComponent(OCMCart, 'ocm-cart');\n  }\n\n  buildWebComponent(angularComponent, htmlTagName: string) {\n    const component = createCustomElement(angularComponent, {\n      injector: this.injector,\n    });\n    if (!customElements.get(htmlTagName)) {\n      customElements.define(htmlTagName, component);\n    }\n }\n}\n"]}